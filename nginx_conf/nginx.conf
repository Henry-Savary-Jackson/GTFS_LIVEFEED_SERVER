worker_processes 1;

error_log  /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  use epoll;
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {

  include mime.types;
  # fallback in case we can't determine a type
  # default_type application/octet-stream;
  access_log /var/log/nginx/access.log combined;
  sendfile on;


  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl;
    ssl_certificate     certs/fullchain.pem;
    ssl_certificate_key certs/privkey.pem;
    client_max_body_size 1G;

    access_log /var/log/nginx/access.log;

    keepalive_timeout 5;

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;

      proxy_buffering on;
      proxy_redirect off;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";

      proxy_pass http://flask:5000;
    }
  }
}